{"version":3,"sources":["webpack:///./src/templates/tag-page.js"],"names":["TagRoute","render","posts","this","props","data","allMarkdownRemark","edges","title","site","siteMetadata","postLinks","map","post","key","node","fields","slug","to","frontmatter","location","totalCount","pageContext","tag","React","Component","pageQuery"],"mappings":"2OAKMA,E,kGACJC,OAAA,WAEE,IAAMC,EAAQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MAC1CC,EAAQL,KAAKC,MAAMC,KAAKI,KAAKC,aAAaF,MAC1CG,EAAYT,EAAMU,KAAI,SAAAC,GAC1B,OACE,kBAAIC,IAAKD,EAAKE,KAAKC,OAAOC,MACxB,YAAC,OAAD,CAAMC,GAAIL,EAAKE,KAAKC,OAAOC,MAAOJ,EAAKE,KAAKI,YAAYX,WAK9D,OACE,YAAC,IAAD,CAAQY,SAAUjB,KAAKC,MAAMgB,UAC3B,YAAC,IAAD,CAAQZ,MAAOA,IACf,sBACGL,KAAKC,MAAMC,KAAKC,kBAAkBe,WADrC,uBAEGlB,KAAKC,MAAMkB,YAAYC,IAF1B,KAIA,sBAAKZ,GACL,qBACE,YAAC,OAAD,CAAMO,GAAG,UAAT,sB,GAtBaM,IAAMC,WA6BdzB,YAER,IAAM0B,EAAS","file":"component---src-templates-tag-page-js-eb5ad243e50cd188f940.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Helmet from \"react-helmet\"\r\nimport Layout from \"../layouts/index.js\"\r\n\r\nclass TagRoute extends React.Component {\r\n  render() {\r\n    //console.log(this.props)\r\n    const posts = this.props.data.allMarkdownRemark.edges\r\n    const title = this.props.data.site.siteMetadata.title\r\n    const postLinks = posts.map(post => {\r\n      return (\r\n        <li key={post.node.fields.slug}>\r\n          <Link to={post.node.fields.slug}>{post.node.frontmatter.title}</Link>\r\n        </li>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <Layout location={this.props.location}>\r\n        <Helmet title={title} />\r\n        <h2>\r\n          {this.props.data.allMarkdownRemark.totalCount} posts tagged with “\r\n          {this.props.pageContext.tag}”\r\n        </h2>\r\n        <ul>{postLinks}</ul>\r\n        <p>\r\n          <Link to=\"/tags/\">Browse all tags</Link>\r\n        </p>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TagRoute\r\n\r\nexport const pageQuery = graphql`\r\n  query TagPage($tag: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] }, draft: { ne: true } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}